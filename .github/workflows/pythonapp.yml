name: python-consul2 build

on:
  push:
    branches:
      - master
    tags:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        name: [
          "py27",
          "py35",
          "py36",
          "py37",
          "pypy2",
          "pypy3"]

        include:
          - name: "py27"
            python: "2.7"
            os: ubuntu-latest
            tox_env: "py27"
            use_coverage: true

          - name: "py35"
            python: "3.5"
            os: ubuntu-latest
            tox_env: "py35"
            use_coverage: true

          - name: "py36"
            python: "3.6"
            os: ubuntu-latest
            tox_env: "py36"
            use_coverage: true

          - name: "py37"
            python: "3.7"
            os: ubuntu-latest
            tox_env: "py37"
            use_coverage: true

          - name: "py38"
            python: "3.8"
            os: ubuntu-latest
            tox_env: "py38"
            use_coverage: true

          - name: "pypy2"
            python: "pypy2"
            os: ubuntu-latest
            tox_env: "pypy"
            use_coverage: true

          - name: "pypy3"
            python: "pypy3"
            os: ubuntu-latest
            tox_env: "pypy3"
            use_coverage: true
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: dowload consul bin files
        run: |
            wget -O tests/consul_1.6.1_linux_amd64.zip https://releases.hashicorp.com/consul/1.6.1/consul_1.6.1_linux_amd64.zip
            wget -O tests/consul_1.6.1_linux_arm64.zip https://releases.hashicorp.com/consul/1.6.1/consul_1.6.1_linux_arm64.zip
            cd tests
            unzip consul_1.6.1_linux_amd64.zip
            mv consul consul.linux64
            unzip consul_1.6.1_linux_arm64.zip
            mv consul consul.aarch64
            cd ..

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Tox and any other packages
        run: pip install tox

      - name: Test without coverage
        if: "matrix.use_coverage"
        run: "tox -e ${{ matrix.tox_env }}"

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.pypi_username }}
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --verbose


  flake8:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - name: test
        run: |
          echo ok!

  test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.7"
      - name: test
        run: |
          echo ok!



